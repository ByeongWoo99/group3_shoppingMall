<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.shoppingmall.repository.product.ProductRepository">  <!-- 어떤 리포지토리를 볼지 정하는 곳 -->
    <!-- 상품 정보 불러오기 -->
    <select id="getProductData">
        SELECT * FROM product
    </select>

    <!--  새로운 상품 등록하기  -->
    <insert id="setProductData">
        INSERT INTO product (
            `product_id`, `seller_id`, `season_id`, `shipping_company_id`, `category_id`,
            `name`, `description`, `price`, `register_datetime`, `updated_datetime`,
            `features`, `notes`, `access_count`, `search_count`, `status`, `new_product_flag`,
            `like_count`, `gender`, `review_count`, `inquiry_count`, `fit`, `texture`,
            `thickness`, `rating`, `total_sales`, `manufacturer`, `origin`,
            `quality_assurance_standard`, `color_count`, `size_count`, `active_flag`
        ) values (
                  ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?
        )
    </insert>

    <select id="getProductById">
        SELECT * FROM product WHERE product_id = #{productId}
    </select>

<!--    <insert id="setName">-->
<!--        insert into name from product where season_id = #{id}-->
<!--    </insert>-->

<!--  상품에 존재하는 옵션들을 나열하기 위해 상품 상세 정보 찾기  -->
    <select id="getProductDetailOptions">
        SELECT * FROM product_detail
        WHERE product_id = #{productId}
    </select>

<!--  상품을 원하는 방식으로 정렬함  -->
    <select id="getProductOrderByOptions">
        SELECT * FROM product
        ORDER BY ${orderOption} DESC
    </select>

    <!-- 원하는 상품만 가져옴 -->
    <select id="getProductBySearch">
        SELECT * FROM product
        WHERE name LIKE CONCAT('%', #{search}, '%')
    </select>

<!--  정렬 리스트 가져오기  -->
    <select id="getProductSortOptions">
        SELECT * FROM product_sort
        ORDER BY `order`
    </select>

<!--  카테고리에서 정한 상품들만 정렬해서 가져오기  -->
    <select id="getCategoryProductWithOrderOption">
        SELECT * FROM product
        WHERE product_id IN
        <foreach collection="productIdList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY ${order} DESC
    </select>

<!--  상품의 진열 상태를 변경  -->
    <update id="setProductStatus">
        UPDATE product
        SET status = #{status}
        WHERE product_id = #{productId}
    </update>

<!--  상품의 세부 정보를 변경  -->
    <update id="setProductInfo">
        UPDATE product
            SET
            name = #{productName},
            price = #{productPrice},
            description = #{productDescription},
            category_id = #{productCategoryId},
            season_id = #{productSessionId},
            notes = #{productNotes},
            gender = #{productGender},
            fit = #{productFit},
            texture = #{productTexture},
            thickness = #{productThickness},
            manufacturer = #{productManufacturer},
            origin = #{productOrigin},
            quality_assurance_standard = #{productQualityAssuranceStandard}
        WHERE product_id = #{productId}
    </update>

</mapper>


